---
- name: Install a program and schedule a cron job to call it automatically
  hosts: all
  vars:
    code_directory: "{{ lookup('env', 'code_directory')|default(ansible_user_dir ~ '/weather-scheduler', true) }}"
    code_repository: "{{ lookup('env', 'repository')|default('https://github.com/mbruzek/weather-scheduler', true) }}"
    cron_directory: "{{ lookup('env', 'cron_directory')|default(ansible_user_dir ~ '/cron', true) }}"

  vars_prompt:
    # weather-scheduler variables
    - name: week_day_of_event
      prompt: The week day of the event
      private: no
    - name: time_of_event
      prompt: Time of event HH:MM AM|PM
      private: no
    - name: api_key
      prompt: Weather Underground API key
      private: yes
    - name: location
      prompt: The location of the event (ST/City)
      private: no
    - name: extra_context
      prompt: Context in comma separated key=value pairs
      private: no
    # Email variables
    - name: from_address
      prompt: The address to send the email from
      private: no
    - name: recipients
      prompt: Comma separated email recipients
      private: no
    - name: subject
      prompt: Subject of the event email
      private: no
    - name: smtp_server
      prompt: SMTP server to send email from
      private: no
    - name: smtp_port
      prompt: SMTP port on server
      private: no
    - name: smtp_user
      prompt: The user to authenticate to the SMTP server
      private: no
    - name: smtp_password
      prompt: Password for the SMTP server
      private: yes
    # Cron variables (m h dom mon dow) : https://en.wikipedia.org/wiki/Cron
    - name: cron_minute
      prompt: The minute when the job should run (0-59)
      private: no
    - name: cron_hour
      prompt: The hour when the job should run (0-23)
      private: no
    - name: cron_day_of_month
      prompt: The day of the month the job should run (1-31)
      private: no
    - name: cron_month
      prompt: The month of the year the job should run (1-12)
      private: no
    - name: cron_day_of_week
      prompt: The day of the week that the job should run (0-6 for Sunday-Saturday)
      private: no
  tasks:
    - name: Create the name for the cron job
      set_fact:
        cron_job_name: "weather-scheduler {{ week_day_of_event }}"

    - name: Remove any previous cron jobs of that name
      cron:
        name: "{{ cron_job_name }}"
        state: absent

    - name: Installing required software
      package:
        name: "{{ item }}"
        state: present
      become: true
      with_items:
        - cron
        - git
        - ntp
        - python3-pip

    - name: Download the weather scheduler code
      git:
        repo: "{{ code_repository }}"
        dest: "{{ ansible_user_dir }}/weather-scheduler"
        force: yes

    - name: Create the cron directory
      file:
        path: "{{ cron_directory }}"
        state: directory
        mode: 0700

    - name: Render the template to the target server
      template:
        src: schedule_event.sh.j2
        dest: "{{ cron_directory }}/schedule_{{ week_day_of_event }}_event.sh"
        mode: 0700

    # Set up the cron job to call the script: m h dom mon dow job
    - name: Schedule this job to run automatically
      cron:
        backup: yes
        minute: "{{ cron_minute }}"
        hour: "{{ cron_hour }}"
        day: "{{ cron_day_of_month }}"
        month: "{{ cron_month }}"
        weekday: "{{ cron_day_of_week }}"
        name: "{{ cron_job_name }}"
        user: "{{ ansible_user }}"
        job: "{{ cron_directory }}/schedule_{{ week_day_of_event }}_event.sh"
